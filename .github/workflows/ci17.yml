name: workflow17

on:
  push:
    branches: [ master,dev ]
  pull_request:
    branches: [ master,dev ]

jobs:
  ubuntu:

    strategy:

      fail-fast: false

      matrix:
        abi: [armeabi-v7a, arm64-v8a, x86, x86_64]
        opt: ['--static', '']
        pkg: [rclone,re2c,restic,resvg,rhash,ripgrep,ripgrep-all,rlwrap,robin-map,rover,rsass,rsync,rtmpdump,rtorrent,ruff,rust-analyzer,ruy,samurai,sassc,scc,scdoc,sd,shaderc,shc,shell2http,shellharden,shiori,silicon,sjpeg,skcms]

    runs-on: ubuntu-latest

    container: ubuntu:24.04

    steps:
      - uses: actions/checkout@v4

      - run: apt -y update
      - run: apt -y install curl

      - run: curl -LO https://raw.githubusercontent.com/leleliu008/ndk-pkg/${{ github.ref_name }}/ndk-pkg
      - run: chmod +x ndk-pkg

      - run: ./ndk-pkg about
      - run: ./ndk-pkg setup
      - run: ./ndk-pkg sysinfo
      - run: ./ndk-pkg formula-repo-add my_repo https://github.com/leleliu008/ndk-pkg-formula-repository-my_repo
      - run: mv formula ~/.ndk-pkg/repos.d/my_repo/
      - run: |
          set -ex

          PKGTYPE=$(./ndk-pkg info-available ${{ matrix.pkg }} pkgtype)

          if [ "$PKGTYPE" = exe ] ; then
            MIN_SDK_API_LEVEL=34
          else
              if [ -z "$PKGTYPE" ] ; then
                  PKGNAME=${{ matrix.pkg }}

                  case $PKGNAME in
                    lib*)
                        ;;
                    *lib)
                        ;;
                       *)
                       MIN_SDK_API_LEVEL=34
                       ;;
                  esac
              fi

              if [ -z "$MIN_SDK_API_LEVEL" ] ; then
                  MIN_SDK_API_LEVEL=$(./ndk-pkg info-available ${{ matrix.pkg }} api-min)
                  if [ -z "$MIN_SDK_API_LEVEL" ] ; then
                    MIN_SDK_API_LEVEL=21
                  fi
              fi
          fi

          ./ndk-pkg install android-$MIN_SDK_API_LEVEL-${{ matrix.abi }}/${{ matrix.pkg }} ${{ matrix.opt }}

  alpine:

    strategy:

      fail-fast: false

      matrix:
        abi: [armeabi-v7a, arm64-v8a, x86, x86_64]
        opt: ['--static', '']
        pkg: [rclone,re2c,restic,resvg,rhash,ripgrep,ripgrep-all,rlwrap,robin-map,rover,rsass,rsync,rtmpdump,rtorrent,ruff,rust-analyzer,ruy,samurai,sassc,scc,scdoc,sd,shaderc,shc,shell2http,shellharden,shiori,silicon,sjpeg,skcms]

    runs-on: ubuntu-latest

    container: alpine

    steps:
      - uses: actions/checkout@v4

      - run: wget https://raw.githubusercontent.com/leleliu008/ndk-pkg/${{ github.ref_name }}/ndk-pkg
      - run: chmod +x ndk-pkg

      - run: ./ndk-pkg about
      - run: ./ndk-pkg setup
      - run: ./ndk-pkg sysinfo
      - run: ./ndk-pkg formula-repo-add my_repo https://github.com/leleliu008/ndk-pkg-formula-repository-my_repo
      - run: mv formula ~/.ndk-pkg/repos.d/my_repo/
      - run: |
          set -ex

          PKGTYPE=$(./ndk-pkg info-available ${{ matrix.pkg }} pkgtype)

          if [ "$PKGTYPE" = exe ] ; then
            MIN_SDK_API_LEVEL=34
          else
              if [ -z "$PKGTYPE" ] ; then
                  PKGNAME=${{ matrix.pkg }}

                  case $PKGNAME in
                    lib*)
                        ;;
                    *lib)
                        ;;
                       *)
                       MIN_SDK_API_LEVEL=34
                       ;;
                  esac
              fi

              if [ -z "$MIN_SDK_API_LEVEL" ] ; then
                  MIN_SDK_API_LEVEL=$(./ndk-pkg info-available ${{ matrix.pkg }} api-min)
                  if [ -z "$MIN_SDK_API_LEVEL" ] ; then
                    MIN_SDK_API_LEVEL=21
                  fi
              fi
          fi

          ./ndk-pkg install android-$MIN_SDK_API_LEVEL-${{ matrix.abi }}/${{ matrix.pkg }} ${{ matrix.opt }}


  macos:
    if: false
    strategy:

      fail-fast: false

      matrix:
        os:  [macos-14]
        abi: [armeabi-v7a, arm64-v8a, x86, x86_64]
        opt: ['--static', '']
        pkg: [rclone,re2c,restic,resvg,rhash,ripgrep,ripgrep-all,rlwrap,robin-map,rover,rsass,rsync,rtmpdump,rtorrent,ruff,rust-analyzer,ruy,samurai,sassc,scc,scdoc,sd,shaderc,shc,shell2http,shellharden,shiori,silicon,sjpeg,skcms]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - run: curl -LO https://raw.githubusercontent.com/leleliu008/ndk-pkg/${{ github.ref_name }}/ndk-pkg
      - run: chmod u+x ndk-pkg

      - run: ./ndk-pkg about
      - run: ./ndk-pkg setup
      - run: ./ndk-pkg sysinfo
      - run: ./ndk-pkg formula-repo-add my_repo https://github.com/leleliu008/ndk-pkg-formula-repository-my_repo
      - run: mv formula ~/.ndk-pkg/repos.d/my_repo/
      - run: |
          set -ex

          if [ ${{ matrix.pkg }} = pdfium ] ; then
            echo ${{ matrix.pkg }} package should be built on GNU/Linux
            exit 0
          fi

          PKGTYPE=$(./ndk-pkg info-available ${{ matrix.pkg }} pkgtype)

          if [ "$PKGTYPE" = exe ] ; then
            MIN_SDK_API_LEVEL=34
          else
              if [ -z "$PKGTYPE" ] ; then
                  PKGNAME=${{ matrix.pkg }}

                  case $PKGNAME in
                    lib*)
                        ;;
                    *lib)
                        ;;
                       *)
                        MIN_SDK_API_LEVEL=34
                        ;;
                  esac
              fi

              if [ -z "$MIN_SDK_API_LEVEL" ] ; then
                  MIN_SDK_API_LEVEL=$(./ndk-pkg info-available ${{ matrix.pkg }} api-min)
                  if [ -z "$MIN_SDK_API_LEVEL" ] ; then
                    MIN_SDK_API_LEVEL=21
                  fi
              fi
          fi

          ./ndk-pkg install android-$MIN_SDK_API_LEVEL-${{ matrix.abi }}/${{ matrix.pkg }} ${{ matrix.opt }}
