pkgtype: lib
summary: Real-Time Communication
web-url: https://webrtc.org/
version: 1
license: BSD-3-Clause
dep-upp: depot_tools

onstart: |
    [ "$NATIVE_PLATFORM_KIND" = linux ] || abort 1 "this library is only supported built on Linux"

# https://webrtc.github.io/webrtc-org/native-code/android/
dofetch: |
    run cd ..

    run fetch --nohistory --nohooks webrtc_android

    cat >> .gclient <<EOF
    target_os = ['android']
    EOF

    run git -C src checkout main

    run gclient sync --verbose

prepare: |
    case $TARGET_PLATFORM_ARCH in
        armv7a)  GN_ARG_TARGET_CPU=arm   ;;
        aarch64) GN_ARG_TARGET_CPU=arm64 ;;
        i686)    GN_ARG_TARGET_CPU=x86   ;;
        x86_64)  GN_ARG_TARGET_CPU=x64   ;;
    esac

    if [ "$TARGET_PLATFORM_ARCH" = 'armv7a' ] ; then
        GN_ARG_EXTRA='arm_version=7'
    else
        GN_ARG_EXTRA=
    fi

    gnw() {
        run gn gen . "--root=$PACKAGE_BSCRIPT_DIR" "'--args=$* target_os=\"android\" android_ndk_root=\"$ANDROID_NDK_ROOT\" android32_ndk_api_level=$TARGET_PLATFORM_VERS android64_ndk_api_level=$TARGET_PLATFORM_VERS target_cpu=\"$GN_ARG_TARGET_CPU\" v8_target_cpu=\"$GN_ARG_TARGET_CPU\" $GN_ARG_EXTRA'"
        run gn args --list .
    }

install: |
    gnw \
        is_cfi=false \
        is_debug=false \
        is_component_build=false \
        is_official_build=false \
        v8_static_library=false \
        v8_monolithic=false \
        v8_enable_future=true \
        v8_enable_fuzztest=false \
        v8_android_log_stdout=false \
        v8_enable_i18n_support=false \
        v8_use_external_startup_data=false \
        treat_warnings_as_errors=false \
        clang_use_chrome_plugins=false \
        strip_debug_info=true \
        use_custom_libcxx=false \
        use_lld=true

    run ninja --version
    run ninja --verbose

    run install_libs *.so
