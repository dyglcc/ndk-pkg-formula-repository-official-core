summary: A lightweight implementation of the Ruby language
web-url: https://mruby.org/
git-url: https://github.com/mruby/mruby
src-url: https://github.com/mruby/mruby/archive/3.2.0.tar.gz
src-sha: 3c198e4a31d31fe8524013066fac84a67fe6cd6067d92c25a1c79089744cb608
license: MIT
dep-pkg: readline
dep-upp: bison patch
bsystem: rake
binbstd: 1

# double complex clog(double complex __z) __INTRODUCED_IN(26);
api-min: 26

# https://mruby.org/docs/api/file.compile.html
dopatch: |
    cat > build_config/android.rb <<EOF
    MRuby::CrossBuild.new('android') do |conf|
      params = {
        :arch => ENV['TARGET_PLATFORM_ABI'],
        :sdk_version => ENV['TARGET_PLATFORM_VERS'],
        :toolchain => :clang,
      }
      toolchain :android, params

      conf.cc.command = ENV['CC_FOR_TARGET'] || 'clang'
      conf.cc.flags << ENV['CFLAGS_FOR_TARGET'] || ''
      conf.linker.command = conf.cc.command
      conf.linker.flags << ENV['LDFLAGS_FOR_TARGET'] || ''
      conf.archiver.command = ENV['AR_FOR_TARGET']

      conf.gembox 'default'
    end
    EOF

    cat > patch.diff <<EOF
    --- a/tasks/toolchains/android.rake
    +++ b/tasks/toolchains/android.rake
    @@ -252,7 +252,7 @@
       def ar
         case toolchain
         when :gcc   then bin_gcc('ar')
    -    when :clang then bin_gcc('ar')
    +    when :clang then bin('llvm-ar')
         end
       end

    @@ -271,7 +271,7 @@
           when /mips/         then flags += %W(-march=mips32)
           end
         when :clang
    -      case arch
    +      case nil
           when /armeabi-v7a/  then flags += %W(-target armv7-none-linux-androideabi#{v})
           when /armeabi/      then flags += %W(-target armv5te-none-linux-androideabi#{v})
           when /arm64-v8a/    then flags += %W(-target aarch64-none-linux-android#{v})
    @@ -282,7 +282,7 @@
           end
         end

    -    case arch
    +    case nil
         when /armeabi-v7a/  then flags += %W(-mfpu=#{armeabi_v7a_mfpu} -mfloat-abi=#{armeabi_v7a_mfloat_abi})
         when /armeabi/      then flags += %W(-mtune=xscale -msoft-float)
         when /arm64-v8a/    then flags += %W()
    @@ -254,7 +254,7 @@
         flags += ctarget
         case toolchain
         when :gcc
    -    when :clang
    +    when nil
           flags += %W(-gcc-toolchain "#{gcc_toolchain_path}" -Wno-invalid-command-line-argument -Wno-unused-command-line-argument)
         end
         flags += %W(-fpic -ffunction-sections -funwind-tables -fstack-protector-strong -no-canonical-prefixes)
    @@ -333,8 +331,7 @@
           when /armeabi-v7a/  then flags += %W(-Wl#{no_warn_mismatch})
           end
         when :clang
    -      flags += %W(-gcc-toolchain "#{gcc_toolchain_path.to_s}")
    -      case arch
    +      case nil
           when /armeabi-v7a/  then flags += %W(-target armv7-none-linux-androideabi#{v} -Wl,--fix-cortex-a8#{no_warn_mismatch})
           when /armeabi/      then flags += %W(-target armv5te-none-linux-androideabi#{v})
           when /arm64-v8a/    then flags += %W(-target aarch64-none-linux-android#{v})
    EOF

    patch -p1 < patch.diff

install: |
    export      AR_FOR_TARGET="$AR"
    export      CC_FOR_TARGET="$CC"
    export  CFLAGS_FOR_TARGET="$CPPFLAGS $CFLAGS -DMRB_USE_READLINE -DMRB_READLINE_HEADER=\\<readline/readline.h\\> -DMRB_READLINE_HISTORY=\\<readline/history.h\\>"
    export LDFLAGS_FOR_TARGET="$LDFLAGS -lncurses -lreadline"

    unset CPPFLAGS
    unset   CFLAGS
    unset  LDFLAGS

    export CC="$CC_FOR_BUILD"
    export LD="$CC_FOR_BUILD"

    export TARGET_PLATFORM_ABI
    export TARGET_PLATFORM_VERS

    export MRUBY_CONFIG=android

    run rake

    run install_bins build/android/bin/*
    run install_libs build/android/lib/*.a
    run cp -r build/android/include "$PACKAGE_INSTALL_DIR"
