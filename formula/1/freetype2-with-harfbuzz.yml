pkgtype: lib
summary: A C library to render fonts
web-url: https://www.freetype.org
git-url: https://gitlab.freedesktop.org/freetype/freetype
src-url: https://downloads.sourceforge.net/project/freetype/freetype2/2.13.2/freetype-2.13.2.tar.xz
src-sha: 12991c4e55c506dd7f9b765933e62fd2be2e06d421505d7950a132e4f1bb484d
dep-pkg: brotli libbz2 libpng harfbuzz
license: FTL

dopatch: |
    cat > builds/cmake/FindBrotliDec.cmake <<EOF
    if (BROTLIDEC_INCLUDE_DIRS AND BROTLIDEC_LIBRARIES)
        set(BROTLIDEC_FOUND TRUE)
    else()
        find_package(PkgConfig)
        pkg_check_modules(PC_BROTLIDEC QUIET libbrotlidec)

        if (PC_BROTLIDEC_FOUND)
            if (PC_BROTLIDEC_INCLUDE_DIRS)
                set(BROTLIDEC_INCLUDE_DIRS "\${PC_BROTLIDEC_INCLUDE_DIRS}")
            elseif (PC_BROTLIDEC_INCLUDEDIR)
                set(BROTLIDEC_INCLUDE_DIRS "\${PC_BROTLIDEC_INCLUDEDIR}")
            else()
                find_path(BROTLIDEC_INCLUDE_DIRS brotli/decode.h)
            endif()

            set(BROTLIDEC_LIBRARIES "\${PC_BROTLIDEC_LINK_LIBRARIES}")

            if (PC_BROTLIDEC_VERSION)
                set(BROTLIDEC_VERSION "\${PC_BROTLIDEC_VERSION}")
            endif()
        endif()
    endif()

    include(FindPackageHandleStandardArgs)
    find_package_handle_standard_args(
        BrotliDec 
        REQUIRED_VARS BROTLIDEC_LIBRARIES BROTLIDEC_INCLUDE_DIRS 
        FOUND_VAR BROTLIDEC_FOUND 
        VERSION_VAR BROTLIDEC_VERSION
    )

    mark_as_advanced(BROTLIDEC_INCLUDE_DIRS BROTLIDEC_LIBRARIES)
    EOF

    cat > builds/cmake/FindHarfBuzz.cmake <<EOF
    if (HarfBuzz_INCLUDE_DIRS AND HarfBuzz_LIBRARIES)
        set(HarfBuzz_FOUND TRUE)
    else()
        find_package(PkgConfig)
        pkg_check_modules(PC_HarfBuzz QUIET harfbuzz-icu)

        if (PC_HarfBuzz_FOUND)
            if (PC_HarfBuzz_INCLUDE_DIRS)
                set(HarfBuzz_INCLUDE_DIRS "\${PC_HarfBuzz_INCLUDE_DIRS}")
            elseif (PC_HarfBuzz_INCLUDEDIR)
                set(HarfBuzz_INCLUDE_DIRS "\${PC_HarfBuzz_INCLUDEDIR}")
            else()
                find_path(HarfBuzz_INCLUDE_DIRS hb.h)
            endif()

            set(HarfBuzz_LIBRARIES "\${PC_HarfBuzz_LINK_LIBRARIES}")

            if (PC_HarfBuzz_VERSION)
                set(HarfBuzz_VERSION "\${PC_HarfBuzz_VERSION}")
            endif()
        endif()
    endif()

    set(HarfBuzz_ICU_INCLUDE_DIR "\${HarfBuzz_INCLUDE_DIRS}")
    set(HarfBuzz_ICU_LIBRARY     "\${HarfBuzz_LIBRARIES}")

    if (NOT TARGET  HarfBuzz::HarfBuzz)
        add_library(HarfBuzz::HarfBuzz INTERFACE IMPORTED)
        set_target_properties(HarfBuzz::HarfBuzz PROPERTIES
            INTERFACE_INCLUDE_DIRECTORIES "${HarfBuzz_INCLUDE_DIRS}"
            INTERFACE_LINK_LIBRARIES      "${HarfBuzz_LIBRARIES}"
        )
    endif()

    if (NOT TARGET  HarfBuzz::ICU)
        add_library(HarfBuzz::ICU INTERFACE IMPORTED)
        set_target_properties(HarfBuzz::ICU PROPERTIES
            INTERFACE_INCLUDE_DIRECTORIES "${HarfBuzz_INCLUDE_DIRS}"
            INTERFACE_LINK_LIBRARIES      "${HarfBuzz_LIBRARIES}"
        )
    endif()

    include(FindPackageHandleStandardArgs)
    find_package_handle_standard_args(
        HarfBuzz 
        REQUIRED_VARS HarfBuzz_LIBRARIES HarfBuzz_INCLUDE_DIRS 
        FOUND_VAR HarfBuzz_FOUND 
        VERSION_VAR HarfBuzz_VERSION
    )

    mark_as_advanced(
        HarfBuzz_INCLUDE_DIR
        HarfBuzz_ICU_INCLUDE_DIR
        HarfBuzz_LIBRARY
        HarfBuzz_ICU_LIBRARY
    )
    EOF

    sedInPlace 's|HarfBuzz_LIBRARY|HarfBuzz_LIBRARIES|' CMakeLists.txt

install: |
    cmakew \
        -DFT_WITH_BROTLI=ON \
        -DFT_WITH_BZIP2=ON \
        -DFT_WITH_ZLIB=ON \
        -DFT_WITH_PNG=ON \
        -DFT_WITH_HARFBUZZ=ON
