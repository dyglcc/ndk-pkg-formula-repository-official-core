pkgtype: exe+lib
summary: Cryptography and SSL/TLS Toolkit
git-url: https://github.com/openssl/openssl
web-url: https://www.openssl.org/
src-url: https://www.openssl.org/source/openssl-3.2.1.tar.gz
src-sha: 83c7329fe52c850677d75e5d0b0ca245309b97e8ecbcfdc1dfdc4ab9fac35b39
license: Apache-2.0
dep-upp: perl
bsystem: gmake

dopatch: |
    sed_in_place '/-mandroid/d'           Configurations/15-android.conf
    sed_in_place '/ndk is invalid/d'      Configurations/15-android.conf
    sed_in_place '/no NDK $triarch-gcc/d' Configurations/15-android.conf
    sed_in_place '/-target/d'             Configurations/15-android.conf
    sed_in_place '/-gcc-toolchain/d'      Configurations/15-android.conf
    sed_in_place '/tritools-4.9/d'        Configurations/15-android.conf

prepare: |
    cat > proxy-ld.c <<EOF
    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <unistd.h>

    int main(int argc, char* argv[]) {
        for (int i = 1; i < argc; i++) {
            if (strcmp(argv[i], "-lssl") == 0) {
                argv[i] = (char*)"./libssl.a";
            } else if (strcmp(argv[i], "-lcrypto") == 0) {
                argv[i] = (char*)"./libcrypto.a";
            } else if (strcmp(argv[i], "-fPIC") == 0) {
                argv[i] = (char*)"-static";
            }
        }

        char * const LD = getenv("CC");

        if (LD == NULL) {
            fprintf(stderr, "CC environment variable is not set.");
            return 1;
        }

        if (LD[0] == '\0') {
            fprintf(stderr, "CC environment variable is not set.");
            return 1;
        }

        argv[0] = LD;

        for (int i = 0; i < argc; i++) {
            fprintf(stderr, "%s ", argv[i]);
        }

        fprintf(stderr, "\n");

        execv(LD, argv);
        perror(LD);
        return 255;
    }
    EOF

    run $CC_FOR_BUILD $CPPFLAGS_FOR_BUILD $CFLAGS_FOR_BUILD $LDFLAGS_FOR_BUILD -std=c99 -o proxy-ld proxy-ld.c

    run export LDCMD=./proxy-ld

    # ./configure LIST | grep android
    case $TARGET_PLATFORM_ARCH in
        armv7a)  TARGET='android-arm'    ;;
        aarch64) TARGET='android-arm64'  ;;
        i686)    TARGET='android-x86'    ;;
        x86_64)  TARGET='android-x86_64' ;;
    esac

    export CROSS_SYSROOT="$SYSROOT"

install: |
    run ./Configure \
        no-tests \
        no-ssl2 \
        no-ssl3 \
        no-comp \
        no-asm \
        -D__ANDROID_API__="$TARGET_PLATFORM_VERS" \
        --prefix="$PACKAGE_INSTALL_DIR" \
        --libdir=$PACKAGE_INSTALL_DIR/lib \
        --openssldir=$PACKAGE_INSTALL_DIR/etc/ssl \
        "$TARGET"
    gmakew clean
    gmakew CROSS_COMPILE=
    gmakew CROSS_COMPILE= install

dotweak: sed_in_place 's|-latomic||g' lib/pkgconfig/libcrypto.pc
